#+TITLE: Template
#+AUTHOR: Lou Sanus
#+DESCRIPTION: Literate sync script
#+PROPERTY: header-args :tangle
#+auto_tangle: t
#+STARTUP: showeverything

* Table of Contents :toc:
- [[#about][About]]
- [[#directories][Directories]]
  - [[#the-code][The Code]]

* About

This is a script I have been working on for a long time. I have recently decided to rewrite it in org.
The purpose of this script is to quickly sync git repositories to the cloud as well as practice writing conditionals and loops.

* Directories
I have created git repositories in the following sub directories within $HOME. Customize as necessary for your Linux System.

- $HOME/git/dotfiles.git (For tracking dotfiles)
- $HOME/git/uofc (Used for my website)
- $HOME/documents/org (For notes, and miscellanious org documents)
- $HOME/.local/bin/ (For general scripts)
- $HOME/.local/bin/$PROJECT_NAME (For more involved scripts)

  All git directories should contain a .git folder and be treated as the working directory. The exception is the dotfiles.git directory which uses a unique function to take
  advantage of a techniques described in a tutorial by [[https://youtu.be/tBoLDpTWVOM][DistroTube]]. A text version can be found [[https://www.atlassian.com/git/tutorials/dotfiles][here]].

** The Code
Create variables for target directories.
Check if git directories are present on the system, create them if not.
In these tests I am using the "!" operator to check if the expression is false. Then performing actions based on the results.

*** Dotfiles
Since my dotfiles directory is tracked using a different method than the rest of my repositories, I have segregated it to it's own blocks.
#+begin_src bash
dotf-var () {
dotfiles="$HOME/git/dotfiles.git"
if
    [ ! -d "$dotfiles" ];
    then
        git init --bare $dotfiles
        else
            echo "Dotfiles repo present."
fi
}
#+end_src

A quick function for executing git bare commands.
#+begin_src bash
dotf () {
          "/usr/bin/git --git-dir=$dotfiles --work-tree=$HOME"
}
#+end_src

Loop "dotf" function until dotfiles repo has synced with all remotes and branches.
#+begin_src bash
remotes='origin lab local vps'

for r in $remotes
         do
             dotf pull origin master
             dotf push r master
done
#+end_src
